Date  Who       Start  Stop   Interruptions Question TimeOnTask      Comments

9/5   KS        12:00  12:30                            30           Setting up GitHub and laptop

============committing to git: 9/5 12:23 ===================

9/5   KS	12:35  13:00     5			20	     Reading through Master Rubric
9/5   KS	13:00  13:10	 5	        1	5	     Starting on Ex1 
9/5   KS	13:10  13:35     5              1       20           Thinking about the possible two more expressions
								     *Finished Ex1*

============committing to git: 9/5 13:36 ===================
								     	
9/5   KS	13:40  13:47	 	        2	7	     Starting Ex2
								     *Finished Ex2*

============committing to git: 9/5 13:48 ===================

9/5   KS	13:50  14:00  	 	        3	10	     Starting on Ex3
9/5   KS	14:00  14:20 	 	        3	20	     Analyzing how to check repeating decimals.
							             Inserted results from interaction area in order the check      								     results Getting erroneous text on Github.
9/5   KS	14:20  14:50 	 10	        3	20  	     Unable to check negative number in check-within
							             *Finished Ex3*

============committing to git: 9/5 14:50 ===================


9/5   KS	16:00  16:10  	 	        4	10	     Starting on Ex4, Checking contract purpose statement and 
								     Analyzing function definition.
9/5   KS	16:10  16:30  	 	        4	20     	     Checking negative cases and inserting check statements
								     *Finished Ex4*
============committing to git: 9/5 16:40 ===================

9/5   KS	16:40  16:50  	 	        5	10	     Starting on Ex5, Checking contract purpose statement and 
								     Analyzing function definition.
								     *Finished Ex5*

============committing to git: 9/5 16:50 ===================

9/5   KS	16:50  17:10  	 5	        6	20	     Starting on Ex6, Writing contract, purpose statement and 
								     noting down examples.
								     thinking about the indentation for the function definition.
9/5   KS	17:10  17:15  	 	        6	5            Setting up check-expect statements
								     *Finished Ex6*

============committing to git: 9/5 17:15 ===================


9/5   KS	17:30  17:40  	 	        7	10	     Starting on Ex7, Analyzing contract, purpose statement.
9/5   KS	17:40  17:50  	 	        7	20           Looking at check-expect statements and it appears we are to 								     use check-within and added case for Radius being Negative
								     *Finished Ex7*

============committing to git: 9/5 17:50 ===================


9/5   KS	17:52  17:55  	 	        8	3	     Starting on Ex8, Reading the questionâ€¦
9/5   KS	17:55  18:05  	 	        8	10           Preparing the contract, purpose statement and examples.
9/5   KS	18:05  18:10  	 	        8	10 	     *Finished Ex8*

============committing to git: 9/5 18:10 ===================


9/5   KS	18:10  18:35  	 	        9	25	     Started Ex9, and researching on the difference between modulo
								     and remainder.
9/5   KS	18:35  18:50  	 	        9	15	     Unable to completely understand the difference, will get back 								     to this later. Moving on with Function even?.v1 using 									     remainder.
9/5   KS	18:50  19:05  	 	        10	10	     Moving on to Ex 10. Writing down the contract, purpose 									     statement and examples
9/5   KS	19:05  19:15  	 	        10	10	     *Finished Exe 10*
9/5   KS	19:15  20:30 	 15+10+10        9	40	     Going back of Ex9, will continue the difference between  	  								     remainder and modulo later.
   
============committing to git: 9/5 21:00 ===================

9/6   KS	13:10  13:30 	                 9	20	     Completed note about remainder and modulo, they use 									     different functions to evaluate the results.
								     *Finished Ex9*		

============committing to git: 9/6 13:30 ===================


Total Time On Task Q1 (minutes)                  25 
Total Time On Task Q2 (minutes)                  7 
Total Time On Task Q3 (minutes)                  50 
Total Time On Task Q4 (minutes)                  30 
Total Time On Task Q5 (minutes)                  10 
Total Time On Task Q6 (minutes)                  25 
Total Time On Task Q7 (minutes)                  30 
Total Time On Task Q8 (minutes)                  23 
Total Time On Task Q9 (minutes)                  80 
Total Time On Task Q10 (minutes)                 20 
TOTQ1 (hours and tenths)                         0.5 
TOTQ2 (hours and tenths)                         0.1 
TOTQ3 (hours and tenths)                         0.9 
TOTQ4 (hours and tenths)                         0.5 
TOTQ5 (hours and tenths)                         0.2 
TOTQ6 (hours and tenths)                         0.4 
TOTQ7 (hours and tenths)                         0.5 
TOTQ8 (hours and tenths)                         0.4 
TOTQ9 (hours and tenths)                         1.3 
TOTQ10 (hours and tenths)                        0.3

